{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Warning ChooChoo (including this documentation) is currently under development \ud83d\udc22. It has a planned release date of September 2022. If you would like to beta-test ChooChoo for your own teaching, please get in contact . What is ChooChoo? \u2728 ChooChoo is a Ch ecklist t oo l for educators \u2728 ChooChoo encourages learning through student self-assessment , class collaboration and diagnostic teaching . \u2728 Students and instructors interact with choochoo-bot through a Github issue thread . This makes ChooChoo especially relevant to those who already teach using Github. It's also a great way to introduce your students to the wonderful world of Git, Github and version control! \u2728 ChooChoo is free to use and adapt under a Creative Commons License . Features \ud83d\udccb Create checklists for your students to work through \ud83d\udd17 Link checklist items to a question bank and/or tutorials \u2753 Enable students contributions to the question bank \ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd Use student peer-review to decide which questions are published \ud83d\udcca Generate online plots to summarise class progress in real time Interested? See the setup guide for instructors. Pretty-please say hi if you are using ChooChoo - either through the discussions page or via email . If we know people are using it, we're more likely to do the housework- sweeping out the old dusty code, polishing up the documentation \ud83e\uddf9. Tip Are you a student looking to get started with ChooChoo? The place you're looking for is probably the student setup instructions .","title":"Welcome"},{"location":"#what-is-choochoo","text":"\u2728 ChooChoo is a Ch ecklist t oo l for educators \u2728 ChooChoo encourages learning through student self-assessment , class collaboration and diagnostic teaching . \u2728 Students and instructors interact with choochoo-bot through a Github issue thread . This makes ChooChoo especially relevant to those who already teach using Github. It's also a great way to introduce your students to the wonderful world of Git, Github and version control! \u2728 ChooChoo is free to use and adapt under a Creative Commons License .","title":"What is ChooChoo?"},{"location":"#features","text":"\ud83d\udccb Create checklists for your students to work through \ud83d\udd17 Link checklist items to a question bank and/or tutorials \u2753 Enable students contributions to the question bank \ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd Use student peer-review to decide which questions are published \ud83d\udcca Generate online plots to summarise class progress in real time","title":"Features"},{"location":"#interested","text":"See the setup guide for instructors. Pretty-please say hi if you are using ChooChoo - either through the discussions page or via email . If we know people are using it, we're more likely to do the housework- sweeping out the old dusty code, polishing up the documentation \ud83e\uddf9. Tip Are you a student looking to get started with ChooChoo? The place you're looking for is probably the student setup instructions .","title":"Interested?"},{"location":"citation/","text":"If you use this software for your educational research, please cite using the following information: APA Format Whalley, L. D. ChooChoo the checklist tool [Computer software]. https://github.com/lucydot/ChooChoo/ Bibtex @software{Whalley_ChooChoo_the_checklist, author = {Whalley, Lucy Dorothy}, license = {CC-BY-SA-4.0}, title = {{ChooChoo the checklist tool}}, url = {https://github.com/lucydot/ChooChoo/} }","title":"Citation"},{"location":"citation/#apa-format","text":"Whalley, L. D. ChooChoo the checklist tool [Computer software]. https://github.com/lucydot/ChooChoo/","title":"APA Format"},{"location":"citation/#bibtex","text":"@software{Whalley_ChooChoo_the_checklist, author = {Whalley, Lucy Dorothy}, license = {CC-BY-SA-4.0}, title = {{ChooChoo the checklist tool}}, url = {https://github.com/lucydot/ChooChoo/} }","title":"Bibtex"},{"location":"intro/","text":"ChooChoo is a checklist tool for educators. ChooChoo encourages learning through self-assessment, collaboration and diagnostic teaching. If you would like to know more about the pedagogy underlying ChooChoo please read the Pedagogy page . Warning If you use ChooChoo as part of any published work, please cite accordingly . ChooChoo target audience ChooChoo is domain agnostic. It is primarily aimed at people who already use Github for their teaching, and who would like a straight-forward way to assess the progress of their students. It can be integrated into an existing Github repository, or exist as a standalone project. A list of ChooChoo projects is maintained here . Sharing is caring Users are strongly encouraged to share their ChooChoo repositories. This will enable other people to start from existing checklists and question sets and will make setup quicker over time. Sharing can also incentivise student participation in building the question bank, as their work will have impact beyond a single institution. Which skills are needed to use ChooChoo? ChooChoo is based around Github and, in particular, Github Issues. Self-assessment questions (an optional feature) are written using Markdown syntax. In addition, instructors use yaml to specify the ChooChoo checklists and settings. All three tools (Github, Markdown, yaml) are very widely used within the programming community. Learning these skills will, in many cases, be a worthwhile time investment for those who continue to work in technology-related fields. To learn more about the tools that ChooChoo is built on top of please read the [Tools page]. choochoo-bot Students and instructors interact with the choochoo-bot helper using comments in a Github issue thread. All comments starting with choochoo will be received by choochoo-bot . ChooChoo issue types There are three ChooChoo issue types: student , instructor and question_proposal . student issues can created by a student, instructor or admin. They contain an automatically generated, personal checklist to work through. They also contain links to any associated tutorials, questions or external websites. instructor issues can be created by an instructor or admin. They are used to monitor class progress (generate plots) and add/remove students. question_proposal issues can be created by a student, instructor or admin. They contain the proposed question. They also contain any discussion about the question and the votes in support of the question. ChooChoo roles There are three roles within a ChooChoo project: admin , instructor and student : Students can generate personal checklists to work through, propose self-assessment questions and vote on proposed questions. Instructors can add or remove students, summarise class progress as a bar chart, and add questions to the question bank. Admins can do the same as instructors, in addition they are able to generate the student checklist template and add/remove instructors. Documentation for students can be found in the student section . We suggest linking to this from any associated course pages. Documentation for admins and instructors can be found in the instructor section . ChooChoo commands: ChooChoo commands can be split into three types. Each question type is associated with a ChooChoo issue type(s). Icon Description Used in \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo-management any issue \u2753 choochoo-question issue labelled 'question' \ud83d\udccb choochoo-checklist issue labelled 'student' The table below summarises who can run ChooChoo commands. Student command examples and instructor command examples are also available. Type Command student instructor admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo list commands \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo list people \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo build checklists \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo build question bank \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo summarise class progress \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo check [@handle] is [student/instructor/admin] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add [@handle] as [student/instructor] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo remove [@handle] as [student/instructor] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add [@handle] as admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo remove [@handle] as admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add question [web address] to objective [positive integer] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add link [web address] to objective [positive integer] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add tutorial [web address] to objective [positive integer] \u2753 choochoo vote up \u2753 choochoo bank question \ud83d\udccb choochoo generate [positive integer] questions \ud83d\udccb choochoo generate [positive integer] questions for objectives [positive integers with spaces]","title":"Introduction"},{"location":"intro/#choochoo-target-audience","text":"ChooChoo is domain agnostic. It is primarily aimed at people who already use Github for their teaching, and who would like a straight-forward way to assess the progress of their students. It can be integrated into an existing Github repository, or exist as a standalone project. A list of ChooChoo projects is maintained here . Sharing is caring Users are strongly encouraged to share their ChooChoo repositories. This will enable other people to start from existing checklists and question sets and will make setup quicker over time. Sharing can also incentivise student participation in building the question bank, as their work will have impact beyond a single institution.","title":"ChooChoo target audience"},{"location":"intro/#which-skills-are-needed-to-use-choochoo","text":"ChooChoo is based around Github and, in particular, Github Issues. Self-assessment questions (an optional feature) are written using Markdown syntax. In addition, instructors use yaml to specify the ChooChoo checklists and settings. All three tools (Github, Markdown, yaml) are very widely used within the programming community. Learning these skills will, in many cases, be a worthwhile time investment for those who continue to work in technology-related fields. To learn more about the tools that ChooChoo is built on top of please read the [Tools page].","title":"Which skills are needed to use ChooChoo?"},{"location":"intro/#choochoo-bot","text":"Students and instructors interact with the choochoo-bot helper using comments in a Github issue thread. All comments starting with choochoo will be received by choochoo-bot .","title":"choochoo-bot"},{"location":"intro/#choochoo-issue-types","text":"There are three ChooChoo issue types: student , instructor and question_proposal . student issues can created by a student, instructor or admin. They contain an automatically generated, personal checklist to work through. They also contain links to any associated tutorials, questions or external websites. instructor issues can be created by an instructor or admin. They are used to monitor class progress (generate plots) and add/remove students. question_proposal issues can be created by a student, instructor or admin. They contain the proposed question. They also contain any discussion about the question and the votes in support of the question.","title":"ChooChoo issue types"},{"location":"intro/#choochoo-roles","text":"There are three roles within a ChooChoo project: admin , instructor and student : Students can generate personal checklists to work through, propose self-assessment questions and vote on proposed questions. Instructors can add or remove students, summarise class progress as a bar chart, and add questions to the question bank. Admins can do the same as instructors, in addition they are able to generate the student checklist template and add/remove instructors. Documentation for students can be found in the student section . We suggest linking to this from any associated course pages. Documentation for admins and instructors can be found in the instructor section .","title":"ChooChoo roles"},{"location":"intro/#choochoo-commands","text":"ChooChoo commands can be split into three types. Each question type is associated with a ChooChoo issue type(s). Icon Description Used in \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo-management any issue \u2753 choochoo-question issue labelled 'question' \ud83d\udccb choochoo-checklist issue labelled 'student' The table below summarises who can run ChooChoo commands. Student command examples and instructor command examples are also available. Type Command student instructor admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo list commands \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo list people \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo build checklists \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo build question bank \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo summarise class progress \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo check [@handle] is [student/instructor/admin] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add [@handle] as [student/instructor] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo remove [@handle] as [student/instructor] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add [@handle] as admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo remove [@handle] as admin \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add question [web address] to objective [positive integer] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add link [web address] to objective [positive integer] \ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb choochoo add tutorial [web address] to objective [positive integer] \u2753 choochoo vote up \u2753 choochoo bank question \ud83d\udccb choochoo generate [positive integer] questions \ud83d\udccb choochoo generate [positive integer] questions for objectives [positive integers with spaces]","title":"ChooChoo commands:"},{"location":"notes/","text":"Choochoo is a \"fork-and-go\" project Choochoo assumes that the repo is public for local testing need a .env file that should not be version controlled! the locomotive emoji is from: https://creazilla.com/nodes/54585-locomotive-emoji-clipart (creative commons with attribution, from Twitter) People management: the issue labels determine permissions for particular choochoo commands. Any thread with 'instructor' label can issue instructor commands, any thread with 'student' label can issue student commands. To add instructors or students to a project you can edit the settings.yml. Alternatively, instructors can use the choochoo command. Instructors are advised to create one repo for each class group Can't re-type choochoo commands by editing: need to write a new issue comment Automatically assumes branch names but this can be edited Only one webpage of questions per username See some comments in the code - need to run through and move here / to the issues tracker. Note delay in running an action adn the un-intended consequences this may have (for example, building the checklist after adding links) see guide for developers here: https://landlab.readthedocs.io/en/master/development/index.html For nice website styling see jlord's lovely websites","title":"Notes"},{"location":"pedagogy/","text":"Coming soon...ish \ud83d\udc22","title":"Pedagogy"},{"location":"tools/","text":"Coming soon...ish \ud83d\udc22","title":"Tools"},{"location":"contributing/development/","text":"Coming soon...ish...\ud83d\udc22","title":"Development"},{"location":"contributing/welcome/","text":"Contributing to ChooChoo Thanks for your interest in ChooChoo. This project follows the all-contributors specification. Contributions of any kind are welcome! A full list of possible contribution types can be found here . You do not need to be an experienced programmer to help improve ChooChoo. All ChooChoo contributors are asked to follow the Contributor Covenant Code of Conduct . Project description ChooChoo is a Checklist Tool for educators. ChooChoo encourages learning through self-assessment, collaboration and diagnostic teaching. Instructors can create checklists for their students to work through, linked to a question bank and tutorials. Students can make contributions to the question bank, and review the contributions of their peers. Real-time plots are used to summarise class progress and better target teaching towards the topics that students are struggling with. Issue tracker The ChooChoo issue tracker is used to maintain a to-do list for ChooChoo and ChooChoo-template improvements. If you have found a bug or have a suggested improvement that is not listed, consider raising an issue . If you would like to contribute but do not know where to start, take a look at the issues labelled good first issue . Developer resources Information regarding code structure, coding standards, and more can be found in Development . We are happily reviewing pull requests against the main branch of this repository. Contact As a rule of thumb, the more public the information exchange, the better! With this in mind, we encourage you to use the ChooChoo discussions page or to raise an issue on the ChooChoo repository. However we also understand that this public way of working is not suitable for everyone. As an alternative, you can get get in contact with the project lead Lucy. Acknowledgement All contributions will be recognised on the README.md. You are encouraged to log your own contribution using the all-contributors bot . The project lead(s) will also maintain this list.","title":"Welcome"},{"location":"contributing/welcome/#contributing-to-choochoo","text":"Thanks for your interest in ChooChoo. This project follows the all-contributors specification. Contributions of any kind are welcome! A full list of possible contribution types can be found here . You do not need to be an experienced programmer to help improve ChooChoo. All ChooChoo contributors are asked to follow the Contributor Covenant Code of Conduct .","title":"Contributing to ChooChoo"},{"location":"contributing/welcome/#project-description","text":"ChooChoo is a Checklist Tool for educators. ChooChoo encourages learning through self-assessment, collaboration and diagnostic teaching. Instructors can create checklists for their students to work through, linked to a question bank and tutorials. Students can make contributions to the question bank, and review the contributions of their peers. Real-time plots are used to summarise class progress and better target teaching towards the topics that students are struggling with.","title":"Project description"},{"location":"contributing/welcome/#issue-tracker","text":"The ChooChoo issue tracker is used to maintain a to-do list for ChooChoo and ChooChoo-template improvements. If you have found a bug or have a suggested improvement that is not listed, consider raising an issue . If you would like to contribute but do not know where to start, take a look at the issues labelled good first issue .","title":"Issue tracker"},{"location":"contributing/welcome/#developer-resources","text":"Information regarding code structure, coding standards, and more can be found in Development . We are happily reviewing pull requests against the main branch of this repository.","title":"Developer resources"},{"location":"contributing/welcome/#contact","text":"As a rule of thumb, the more public the information exchange, the better! With this in mind, we encourage you to use the ChooChoo discussions page or to raise an issue on the ChooChoo repository. However we also understand that this public way of working is not suitable for everyone. As an alternative, you can get get in contact with the project lead Lucy.","title":"Contact"},{"location":"contributing/welcome/#acknowledgement","text":"All contributions will be recognised on the README.md. You are encouraged to log your own contribution using the all-contributors bot . The project lead(s) will also maintain this list.","title":"Acknowledgement"},{"location":"includes/glossary/","text":"[Github Action workflow]: A configurable automated process consisting of one or more jobs. For more information see here . [convenience functions]: A non-essential subroutine in a programming library which is intended to ease commonly performed tasks. [yaml]: A human-readable language commonly used for configuration files. [Github Pages]: Public webpages built from a Github repository and hosted by Github. For more information see here .","title":"Glossary"},{"location":"instructors/basic/","text":"Note Do not re-edit an existing ChooChoo issue comment - choochoo-bot will not pick this up. If you make a mistake it is best to create a new comment in the issue thread. You can always delete comments if you would like the issue thread to look less cluttered. Important Commands to choochoo-bot trigger a Github Action workflow. Each workflow can take a couple of minutes to run, and they do not run sequentially. In a small handful of use cases his can have some unwanted effects. For example, you may add a link using choochoo add [web-address] to objective 2 and then build the checklist using choochoo build checklist . There is a chance that the second workflow will complete before the first workflow, so that the new checklist will not include the new link. To avoid this problem it is best to double check the generated issue templates. Hint There is often more than one way to do something in ChooChoo. For example: - to add a student to the repo an instructor or admin could use the command choochoo add @handle as instructor . Alternatively, they could edit ./instructor/settings.yml directly. - to add a question to the question bank the instructor could raise a question issue and then use the command choochoo bank question . Alternatively, they could edit ./questions/question_bank.yml directly. In this sense, many of the ChooChoo instructor commands can be seen as convenience functions. --8<-- \"includes/glossary.md\"","title":"Basic"},{"location":"instructors/commands/","text":"Note The ChooChoo command line interface is currently fragile. The commands must be written exactly as listed; capitalisation and whitespace matters. Making the interface more robust is on the developer-todo. choochoo list commands List all commands available to the user type (either student, instructor or admin). choochoo list people List all students, instructors and admins by github username. The list is parsed from. ./instructor/settings.yml . choochoo build checklists Warning This command should not be used once your class is in progress. Strange things will happen if student and question issues are raised for different checklist builds. Admin-only command Build the student and question issue templates using the objectives listed in ./instructor/settings.yml . choochoo build question bank Admin-only command Build and publish a webpage containing all questions in the question bank. Unless otherwise specified the web address is username.github.io/repo_name/questions/question_bank . The question bank file is located at ./questions/question_bank.yml . This yaml file is converted to markdown before being published. choochoo summarise class progress Generate a bar chart summarising class progress through the checklist. Unless otherwise specified the bar chart will be published at username.github.io/repo_name/ . choochoo check [@handle] is [student/instructor/admin] e.g. choochoo check @lucydot is instructor Check if github username @handle is listed as a student, instructor or admin in ./instructor/settings.yml . choochoo add [@handle] as [student/instructor] e.g. choochoo add @lucydot as instructor Add github username @handle as a student or instructor in ./instructor/settings.yml . choochoo remove [@handle] as [student/instructor] e.g. choochoo remove @lucydot as instructor Remove github username @handle as a student or instructor in ./instructor/settings.yml . choochoo add [@handle] as admin e.g. choochoo add @lucydot as admin Admin-only command Add github username @handle as an admin in ./instructor/settings.yml . choochoo remove [@handle] as admin e.g. choochoo remove @lucydot as admin Admin-only command Remove github username @handle as an admin in ./instructor/settings.yml . choochoo add question [web address] to objective [positive integer] e.g. choochoo add question https://lucydot.github.io/ChooChoo-template/questions/question_bank#markdown to objective 2 Admin-only command Add a question to an objective in the checklist. The question is specified using a full web address (including https:// ). Anchor links can be used to link to particular question within the published question bank (as in the example above). The objective is referenced using the number given in the student issue template. choochoo add link [web address] to objective [positive integer] e.g. choochoo add link https://www.markdownguide.org/basic-syntax/ to objective 2 Admin-only command Add a link to an objective in the checklist. The link is specified using a full web address (including https:// ). The objective is referenced using the number given in the student issue template. choochoo add tutorial [web address] to objective [positive integer] e.g. choochoo add tutorial https://lucydot.github.io/ChooChoo-template/tutorials/lists to objective 3 Admin-only command Add a tutorial to an objective in the checklist. The link is specified using a full web address (including https:// ). This (of-course!) allows the possibility to add any tutorials that are contained within https://username.github.io/repo_name/tutorials/ . The objective is referenced using the number given in the student issue template. choochoo vote up Admin-only command / question issues only Add an up-vote to the proposed question. Once a pre-specified number of votes is met an admin will be invited to add the question to the question bank. choochoo bank question Admin-only command / question issues only Add the proposed question to the question bank. choochoo build question bank is required to publish the question online. choochoo generate [positive integer] questions e.g. choochoo generate 5 questions student issues only Generate a webpage containing [positive integer] questions from the question bank. The questions correspond to the objectives which have not been ticked in the issue thread. Unless otherwise specified the webpage can be found at username.github.io/repo_name/questions/handle where handle is the github username of the person issuing the command. choochoo generate [positive integer] questions for objectives [positive integers with spaces] e.g. choochoo generate 5 questions for objectives 1 2 4 student issues only Generate a webpage containing [positive integer] questions from the question bank. The questions correspond to the specified objectives. Unless otherwise specified the webpage can be found at username.github.io/repo_name/questions/handle where handle is the github username of the person issuing the command.","title":"Commands"},{"location":"instructors/questions/","text":"","title":"Questions"},{"location":"instructors/setup/","text":"All aboard! The ChooChoo journey graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Getting ChooChoo There are three ways to get setup with ChooChoo: Fork the choochoo-template repository and specify the objectives/questions/tutorials for your course. Fork an existing choochoo repository and use or extend objectives/questions/tutorials from an existing ChooChoo project. Integrate choochoo into an existing Github repository. The third option (integrate) requires a good understanding of Github. If you are new to Github we recommend forking the choochoo-template or an existing choochoo repository . For more setup details please select a tab below. Fork template Fork existing Integrate Visit https://github.com/lucydot/ChooChoo-template/ Click on the fork icon in the top-right hand corner Specify the owner, repository name and description Click on Create Fork Find an existing ChooChoo repository in your subject domain Click on the fork icon in the top-right hand corner Specify the owner, repository name and description Click on Create Fork Warning This option requires a good understanding of Github. If you are new to Github we recommend forking an existing choochoo repository or the template repository. Note You can copy the ChooChoo files into a dedicated branch if preferred. Just be sure to specify the branch in ./instructor/settings.yml . Visit https://github.com/lucydot/ChooChoo-template/ Copy the ./instructor folder and contents into the root of your repository Create an empty ./plots folder in the root your repository [optional] Create an empty ./questions folder in the root of your repository [optional] Create an empty ./tutorials folder in the root of your repository Copy the contents of .github/ISSUE_TEMPLATE/ into your repository. You may need to create this folder if it does not already exist. Copy the contents of .github/workflows/ into your repository. You may need to create this folder if it does not already exist. Note Your ChooChoo repo should be public if you have standard (free) Github account and want to publish tutorials, questions and summary plots online. You are advised to create one ChooChoo repository for each class group. This will allow you to track the progress of each individual class rather than all classes combined. Permissions Commands to choochoo-bot trigger a Github Action workflow. Permissions are needed to edit the repository during the workflow run. By default the workflow uses secrets.BOT_ACCESS_TOKEN , which requires a BOT_ACCESS_TOKEN to be added to your repository secrets. To do this please get in contact through the ChooChoo discussion page or email . Alternatively you can use the secrets.GITHUB_TOKEN which is automatically generated during any workflow run. To do this replace all instances of secrets.BOT_ACCESS_TOKEN with secrets.GITHUB_TOKEN in the .github/workflows/ directory. The disadvantage of this approach is that choochoo-bot is replaced by the less charming gh-actions bot. ChooChoo settings All ChooChoo settings are contained within ./instructor/settings.yml . This is a yaml file; if you are unfamiliar with yaml you can read more about the syntax on the Tools page . Key settings (must edit) project_title : The project title. project_repo : In the format username/repo_name . admins : A list of Github usernames without the @ sign. instructors : A list of Github usernames without the @ sign. students : A list of Github usernames without the @ sign. User options (may edit) questions : If set to true students can propose their own questions for the question bank. votes_required : The number of votes required before an admin is asked to add a question to the question bank. Advanced options (expert users only) gh-pages : If set to true then the question bank, tutorials and summary plot will be published on the gh-pages_branch . choochoo_branch : The branch where ChooChoo is installed. In most cases this will be the default main or master branch. gh-pages_branch : The branch used to publish web content. This is most commonly gh-pages . For more information on Github Pages please see the Tools page . web_address : The web address for this ChooChoo project. In most cases this will be https://username.github.io/repo_name . ChooChoo objectives The ChooChoo checklist is generated from ./instructor/objectives.yml . This is a yaml file; if you are unfamiliar with yaml you can read more about the syntax on the Tools page . Note All web links must be given using the full web address including https:// . You do not need to provide links for all fields. If there are no links you must use empty square brackets [] . Each ChooChoo checklist contains one or more sections. Each section contains: name : Section name. questions : A list of links to questions associated with this section. tutorials : A list of links to tutorials associated with this section. links : A list of other links associated with this section. objectives : A list of objectives (see below). Each objective contains: name : Objective name/description. questions : A list of links to questions associated with this objective. tutorials : A list of links to tutorials associated with this objective. links : A list of other links associated with this objective.","title":"Setup"},{"location":"instructors/setup/#all-aboard-the-choochoo-journey","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"All aboard! The ChooChoo journey"},{"location":"instructors/setup/#getting-choochoo","text":"There are three ways to get setup with ChooChoo: Fork the choochoo-template repository and specify the objectives/questions/tutorials for your course. Fork an existing choochoo repository and use or extend objectives/questions/tutorials from an existing ChooChoo project. Integrate choochoo into an existing Github repository. The third option (integrate) requires a good understanding of Github. If you are new to Github we recommend forking the choochoo-template or an existing choochoo repository . For more setup details please select a tab below. Fork template Fork existing Integrate Visit https://github.com/lucydot/ChooChoo-template/ Click on the fork icon in the top-right hand corner Specify the owner, repository name and description Click on Create Fork Find an existing ChooChoo repository in your subject domain Click on the fork icon in the top-right hand corner Specify the owner, repository name and description Click on Create Fork Warning This option requires a good understanding of Github. If you are new to Github we recommend forking an existing choochoo repository or the template repository. Note You can copy the ChooChoo files into a dedicated branch if preferred. Just be sure to specify the branch in ./instructor/settings.yml . Visit https://github.com/lucydot/ChooChoo-template/ Copy the ./instructor folder and contents into the root of your repository Create an empty ./plots folder in the root your repository [optional] Create an empty ./questions folder in the root of your repository [optional] Create an empty ./tutorials folder in the root of your repository Copy the contents of .github/ISSUE_TEMPLATE/ into your repository. You may need to create this folder if it does not already exist. Copy the contents of .github/workflows/ into your repository. You may need to create this folder if it does not already exist. Note Your ChooChoo repo should be public if you have standard (free) Github account and want to publish tutorials, questions and summary plots online. You are advised to create one ChooChoo repository for each class group. This will allow you to track the progress of each individual class rather than all classes combined.","title":"Getting ChooChoo"},{"location":"instructors/setup/#permissions","text":"Commands to choochoo-bot trigger a Github Action workflow. Permissions are needed to edit the repository during the workflow run. By default the workflow uses secrets.BOT_ACCESS_TOKEN , which requires a BOT_ACCESS_TOKEN to be added to your repository secrets. To do this please get in contact through the ChooChoo discussion page or email . Alternatively you can use the secrets.GITHUB_TOKEN which is automatically generated during any workflow run. To do this replace all instances of secrets.BOT_ACCESS_TOKEN with secrets.GITHUB_TOKEN in the .github/workflows/ directory. The disadvantage of this approach is that choochoo-bot is replaced by the less charming gh-actions bot.","title":"Permissions"},{"location":"instructors/setup/#choochoo-settings","text":"All ChooChoo settings are contained within ./instructor/settings.yml . This is a yaml file; if you are unfamiliar with yaml you can read more about the syntax on the Tools page .","title":"ChooChoo settings"},{"location":"instructors/setup/#key-settings-must-edit","text":"project_title : The project title. project_repo : In the format username/repo_name . admins : A list of Github usernames without the @ sign. instructors : A list of Github usernames without the @ sign. students : A list of Github usernames without the @ sign.","title":"Key settings (must edit)"},{"location":"instructors/setup/#user-options-may-edit","text":"questions : If set to true students can propose their own questions for the question bank. votes_required : The number of votes required before an admin is asked to add a question to the question bank.","title":"User options (may edit)"},{"location":"instructors/setup/#advanced-options-expert-users-only","text":"gh-pages : If set to true then the question bank, tutorials and summary plot will be published on the gh-pages_branch . choochoo_branch : The branch where ChooChoo is installed. In most cases this will be the default main or master branch. gh-pages_branch : The branch used to publish web content. This is most commonly gh-pages . For more information on Github Pages please see the Tools page . web_address : The web address for this ChooChoo project. In most cases this will be https://username.github.io/repo_name .","title":"Advanced options (expert users only)"},{"location":"instructors/setup/#choochoo-objectives","text":"The ChooChoo checklist is generated from ./instructor/objectives.yml . This is a yaml file; if you are unfamiliar with yaml you can read more about the syntax on the Tools page . Note All web links must be given using the full web address including https:// . You do not need to provide links for all fields. If there are no links you must use empty square brackets [] . Each ChooChoo checklist contains one or more sections. Each section contains: name : Section name. questions : A list of links to questions associated with this section. tutorials : A list of links to tutorials associated with this section. links : A list of other links associated with this section. objectives : A list of objectives (see below). Each objective contains: name : Objective name/description. questions : A list of links to questions associated with this objective. tutorials : A list of links to tutorials associated with this objective. links : A list of other links associated with this objective.","title":"ChooChoo objectives"},{"location":"instructors/tutorials/","text":"","title":"Tutorials"},{"location":"students/commands/","text":"Note The ChooChoo command line interface is currently fragile. The commands must be written exactly as listed; capitalisation and whitespace matters. Making the interface more robust is on the developer-todo. choochoo list commands List all commands available to the user type (either student, instructor or admin). choochoo list people List all students, instructors and admins by github username. The list is parsed from. ./instructor/settings.yml . choochoo check [@handle] is [student/instructor/admin] e.g. choochoo check @lucydot is instructor Check if github username @handle is listed as a student, instructor or admin in ./instructor/settings.yml . choochoo vote up Admin-only command / question issues only Add an up-vote to the proposed question. Once a pre-specified number of votes is met an admin will be invited to add the question to the question bank. choochoo generate [positive integer] questions e.g. choochoo generate 5 questions student issues only Generate a webpage containing [positive integer] questions from the question bank. The questions correspond to the objectives which have not been ticked in the issue thread. Unless otherwise specified the webpage can be found at username.github.io/repo_name/questions/handle where handle is the github username of the person issuing the command. choochoo generate [positive integer] questions for objectives [positive integers with spaces] e.g. choochoo generate 5 questions for objectives 1 2 4 student issues only Generate a webpage containing [positive integer] questions from the question bank. The questions correspond to the specified objectives. Unless otherwise specified the webpage can be found at username.github.io/repo_name/questions/handle where handle is the github username of the person issuing the command.","title":"Commands"},{"location":"students/questions/","text":"","title":"Questions"},{"location":"students/setup/","text":"","title":"Setup"}]}